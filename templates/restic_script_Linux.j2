#!/usr/bin/env bash
# {{ ansible_managed }}
# Backup script for {{ item.value.src|default('stdin') }}
# Use this file to create a Backup and prune existing data with one execution.

export RESTIC_REPOSITORY={{ restic_repos[item.value.repo].location }}
export RESTIC_PASSWORD={{ restic_repos[item.value.repo].password }}
BACKUP_NAME={{ item.value.name }}
{% if restic_repos[item.value.repo].aws_access_key is defined %}
export AWS_ACCESS_KEY_ID={{ restic_repos[item.value.repo].aws_access_key }}
{% endif %}
{% if restic_repos[item.value.repo].aws_secret_access_key is defined %}
export AWS_SECRET_ACCESS_KEY={{ restic_repos[item.value.repo].aws_secret_access_key }}
{% endif %}
{% if restic_repos[item.value.repo].aws_default_region is defined %}
export AWS_DEFAULT_REGION={{ restic_repos[item.value.repo].aws_default_region }}
{% endif %}
{% if item.value.src is defined %}
BACKUP_SOURCE={{ item.value.src }}
{% endif %}
set -euxo pipefail
{#
  Define Tags
#}
{% macro tags(tags) -%}
  {% if tags is defined and (tags|length>0) %}{% for tag in tags %} --tag {{ tag }}{% endfor %}{% endif %}
{%- endmacro %}
{#
  Define Keeped Tags
#}
{% macro keep_tags(tags) -%}
  {% if tags is defined and (tags|length>0) %}{% for tag in tags %} --keep-tag {{ tag }}{% endfor %}{% endif %}
{%- endmacro %}
{#
  Define Hostname
#}
{% macro hostname(h) -%}
  {% if h is defined %} --hostname {{ h }}{% endif %}
{%- endmacro %}
{#
  Define stdin filename
#}
{% macro stdin_filename(n) -%}
  {% if n is defined %} --stdin-filename {{ n }}{% endif %}
{%- endmacro %}
{#
  Define path
#}
{% macro path(repo) -%}
  {% if repo.src is defined and repo.src != None and (repo.src|length>0)  %}{{ repo.src }}{% else %}{{ repo.stdin_filename }}{% endif %}
{%- endmacro %}
{#
  Define retention pattern
#}
{% macro retention_pattern(repo) -%}
  {% if repo.keep_last is defined and repo.keep_last != None %}--keep-last {{ item.value.keep_last }}{% endif %} \
  {% if repo.keep_hourly is defined and repo.keep_hourly != None %}--keep-hourly {{ item.value.keep_hourly }}{% endif %} \
  {% if repo.keep_daily is defined and repo.keep_daily != None %}--keep-daily {{ item.value.keep_daily }}{% endif %} \
  {% if repo.keep_weekly is defined and repo.keep_weekly != None %}--keep-weekly {{ item.value.keep_weekly }}{% endif %} \
  {% if repo.keep_monthly is defined and repo.keep_monthly != None %}--keep-monthly {{ item.value.keep_monthly }}{% endif %} \
  {% if repo.keep_yearly is defined and repo.keep_yearly != None %}--keep-yearly {{ item.value.keep_yearly }}{% endif %} \
  {% if repo.keep_within is defined and repo.keep_within != None %}--keep-within {{ item.value.keep_within }}{% endif %} \
  {% if repo.keep_tag is defined and (repo.keep_tag|length>0) %}{{ keep_tags(repo.keep_tag) }}{% endif %}
{%- endmacro %}
{#
  Define backup commands
#}
if [[ -z ${CRON+x} ]]; then
  MODE_TAG="--tag manual"
else
  MODE_TAG="--tag cron"
fi
{% if item.value.stdin is defined and item.value.stdin == true %}
  {{ item.value.stdin_cmd }} | {{ restic_install_path }}/restic backup --stdin $MODE_TAG {{ tags(item.value.tags) }} {{ stdin_filename(item.value.stdin_filename) }} $@
{% else %}
  {{ restic_install_path }}/restic backup $BACKUP_SOURCE $MODE_TAG {{ tags(item.value.tags) }} $@
{% endif %}
{#
  Define stdin forget commands
#}
{{ restic_install_path }}/restic forget --path {{ path(item.value) }} {{ retention_pattern(item.value) }} {% if item.value.prune is defined and item.value.prune == true %}--prune{% endif %}
